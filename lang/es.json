{
    "a*": "",
    "All": "",
    "CSV": "",
    "TXT": "",
    "Use": "",
    "\\d+": "",
    "{n}": "",
    "Dot:": "",
    "Dots": "",
    "JSON": "",
    "Mask:": "",
    "\\d{4}": "",
    "{n,m}": "",
    "0 or 1": "",
    "Dashes": "",
    "Error:": "",
    "Regex:": "",
    "Seeds:": "",
    "Symbol": "",
    "aB3x9Z": "",
    "abc123": "",
    "#FF5733": "",
    "ABC-123": "",
    "Country": "",
    "Current": "",
    "Example": "",
    "Export:": "",
    "Groups:": "",
    "Meaning": "",
    "Ranges:": "",
    "aBc-123": "",
    "colou?r": "",
    "ABC-1234": "",
    "Copy All": "",
    "Examples": "",
    "Features": "",
    "Grouping": "",
    "Pass!@12": "",
    "Pass%%##": "",
    "Standard": "",
    "Testing:": "",
    "0 or more": "",
    "1 or more": "",
    "Auditing:": "",
    "Escaping:": "",
    "Generates": "",
    "Quantity:": "",
    "Use Cases": "",
    "selection": "",
    "🌐 URLs": "",
    "💡 Tip:": "",
    "(Optional)": "",
    "Area Code:": "",
    "Debugging:": "",
    "Example: \"": "",
    "How to Use": "",
    "Max Length": "",
    "QA testing": "",
    "Quantifier": "",
    "Whitespace": "",
    "[A-Z]{2,4}": "",
    "→ AB1234": "",
    "- Non-digit": "",
    "Alternation": "",
    "Digit (0-9)": "",
    "Digits Only": "",
    "Limitations": "",
    "Random Seed": "",
    "[A-Za-z0-9]": "",
    "→ AB12345": "",
    "= Any Letter": "",
    "Digits (0-9)": "",
    "Form Testing": "",
    "Load Testing": "",
    "Mask Pattern": "",
    "Mask Symbols": "",
    "Quantifiers:": "",
    "Use Presets:": "",
    "✨ Generate": "",
    "= Digit (0-9)": "",
    "Any character": "",
    "Export Smart:": "",
    "International": "",
    "Number Format": "",
    "Quick Presets": "",
    "Regex Pattern": "",
    "Sample Output": "",
    "Set quantity:": "",
    "Start Simple:": "",
    "UI\/UX mockups": "",
    "aB3xY9zK4m...": "",
    "💡 Pro Tip:": "",
    "📋 Copy All": "",
    "🔑 API Keys": "",
    "(abc), (a|b|c)": "",
    "= Alphanumeric": "",
    "= Special Char": "",
    "Choose format:": "",
    "Location Data:": "",
    "Mask Generator": "",
    "Pick location:": "",
    "API Development": "",
    "Add extensions:": "",
    "Between n and m": "",
    "Document Seeds:": "",
    "Exactly n times": "",
    "Example Pattern": "",
    "Export Options:": "",
    "Regex Generator": "",
    "Select country:": "",
    "🇨🇦 Canada": "",
    "🎨 Hex Colors": "",
    "- Non-whitespace": "",
    "Bulk Generation:": "",
    "Character ranges": "",
    "Consider Length:": "",
    "Database seeding": "",
    "Escape Sequences": "",
    "Example: A, M, Z": "",
    "Example: a, X, !": "",
    "Example: a, m, 5": "",
    "For Testing Only": "",
    "Format & Options": "",
    "Generate Numbers": "",
    "Real Area Codes:": "",
    "Software Testing": "",
    "Valid Area Codes": "",
    "Validate Output:": "",
    "Version Control:": "",
    "for random count": "",
    "\"color\", \"colour\"": "",
    "- Any digit (0-9)": "",
    "0 or 1 (optional)": "",
    "= Lowercase (a-z)": "",
    "= Uppercase (A-Z)": "",
    "Advanced Features": "",
    "Batch Generation:": "",
    "Character Classes": "",
    "Escape Sequences:": "",
    "Generated Results": "",
    "Location Settings": "",
    "Multiple Formats:": "",
    "Special Character": "",
    "Use patterns like": "",
    "When to Use Seeds": "",
    "→ USER-abcdefgh": "",
    "⚠️ Important:": "",
    "🏦 IBAN Numbers": "",
    "💳 Credit Cards": "",
    "Character Classes:": "",
    "Supported Features": "",
    "Training materials": "",
    "📱 Phone Numbers": "",
    "\"AB\", \"XYZ\", \"ABCD\"": "",
    "*, +, ?, {n}, {n,m}": "",
    "Advanced Techniques": "",
    "Choose US or Canada": "",
    "Database Population": "",
    "Team Collaboration:": "",
    "Test Incrementally:": "",
    "🚗 License Plates": "",
    "\"\", \"a\", \"aa\", \"aaa\"": "",
    "- Non-word character": "",
    "- Random digit (0-9)": "",
    "About Data Generator": "",
    "Quantifiers in Regex": "",
    "Real-World Use Cases": "",
    "Truncate if exceeded": "",
    "⚙️ Mask Settings": "",
    "📋 Format Examples": "",
    "About Phone Generator": "",
    "Any Letter (A-Z, a-z)": "",
    "Mask Symbol Reference": "",
    "Testing contact forms": "",
    "⚙️ Regex Settings": "",
    "📝 TXT (Plain Text)": "",
    "Documentation Examples": "",
    "GB29NWBK60161331926819": "",
    "Groups and Alternation": "",
    "Leave blank for random": "",
    "Lowercase Letter (a-z)": "",
    "Random Seed (optional)": "",
    "Uppercase Letter (A-Z)": "",
    "\\d, \\w, \\s, \\D, \\W, \\S": "",
    "⚠️ Privacy Notice:": "",
    "✉️ Email Addresses": "",
    "🇺🇸 United States": "",
    "📱 Generated Numbers": "",
    ". matches any character": "",
    "Available Mask Symbols:": "",
    "Tips and Best Practices": "",
    "Why would I use a seed?": "",
    "Word chars (A-Za-z0-9_)": "",
    "Development environments": "",
    "Export Formats Explained": "",
    "No numbers generated yet": "",
    "No results generated yet": "",
    "- Whitespace (space, tab)": "",
    "Supported Regex Features:": "",
    "US format: (555) 123-4567": "",
    "- Random special character": "",
    "Anchors (^, $) are ignored": "",
    "Frequently Asked Questions": "",
    "Number of Results (1-1000)": "",
    "Practical Examples Library": "",
    "Using Quantifiers in Masks": "",
    "Escaping Special Characters": "",
    "[A-Z], [a-z], [0-9], [^abc]": "",
    "Alphanumeric (A-Z, a-z, 0-9)": "",
    "Backreferences not supported": "",
    "Download as TXT or CSV files": "",
    "Example: \"com\", \"net\", \"org\"": "",
    "- Exactly 8 lowercase letters": "",
    "6 different formatting styles": "",
    "Optionally include extensions": "",
    "Copy or download as TXT or CSV": "",
    "Generate 1-100 numbers at once": "",
    "Variable-Length Regex Patterns": "",
    "- Random alphanumeric character": "",
    "- Random lowercase letter (a-z)": "",
    "- Random uppercase letter (A-Z)": "",
    "Advanced regex-based generation": "",
    "Same seed produces same results": "",
    "Simple pattern-based generation": "",
    "- Random letter (upper or lower)": "",
    "Create up to 100 numbers at once": "",
    "Same seed = reproducible results": "",
    "Any other character is kept as-is": "",
    "Generates: PROD-v2.1-aB3xY9zK-456": "",
    "Pick your preferred number format": "",
    "📄 CSV (Comma-Separated Values)": "",
    "Max length prevents infinite loops": "",
    "- Between 3 and 6 uppercase letters": "",
    "- Word character (A-Z, a-z, 0-9, _)": "",
    "Can I generate truly unique values?": "",
    "Can I use this for production data?": "",
    "Include Extension (e.g., ext. 1234)": "",
    "Combining Masks for Complex Patterns": "",
    "Lookaheads\/lookbehinds not supported": "",
    "Mask Generator: Simple and Intuitive": "",
    "Reproduce issues with identical data": "",
    "Shows state\/province for each number": "",
    "Example: \"abc\", \"abcabc\", \"abcabcabc\"": "",
    "Matches any lowercase letter or digit": "",
    "What regex features aren't supported?": "",
    "Matches one of: \"com\", \"net\", or \"org\"": "",
    "What is Pattern-Based Data Generation?": "",
    "🔧 JSON (JavaScript Object Notation)": "",
    "- Exactly 5 digits (equivalent to #####)": "",
    "Matches any uppercase letter from A to Z": "",
    "Understanding Seeds for Reproducible Data": "",
    "Complex pattern with multiple alternations": "",
    "Regex Generator: Advanced Pattern Matching": "",
    "- Between 10 and 15 alphanumeric characters": "",
    "Document seeds in your tests for consistency": "",
    "How do I generate emails that look realistic?": "",
    "All area codes are valid and location-specific": "",
    "Negated class - matches anything except digits": "",
    "Complete Guide to Pattern-Based Data Generation": "",
    "Repeats the entire group \"abc\" one or more times": "",
    "Generates emails with usernames between 5-15 chars": "",
    "Share a seed so everyone generates the same dataset": "",
    "Prove that data was generated with specific parameters": "",
    "What's the difference between mask and regex generation?": "",
    "Generate the same test data across different environments": "",
    "Select a specific state\/province or leave blank for random": "",
    "Quantifiers specify how many times the preceding element should appear.": "",
    "Shorthand escape sequences provide quick access to common character sets.": "",
    "Generate larger batches rather than multiple small ones for better performance.": "",
    "Note: Anchors (^, $) are ignored. Complex lookaheads\/lookbehinds not supported.": "",
    "Select a specific state to generate numbers with area codes from that region only.": "",
    "Use JSON for programmatic access, CSV for databases, and TXT for quick manual use.": "",
    "After generation, validate a sample of results to ensure they meet your requirements.": "",
    "All generated numbers use real area codes mapped to actual US states and Canadian provinces.": "",
    "Generate a few results first to verify your pattern works correctly before generating thousands.": "",
    "If using seeds for reproducible data, document them in your code comments or test documentation.": "",
    "Character classes define a set of characters, and the generator picks one randomly from that set.": "",
    "The preset buttons provide tested patterns for common formats. Modify them to suit your specific needs.": "",
    "Use seeds for reproducible test data. Export results for use in your applications, testing, or databases.": "",
    "These numbers are randomly generated for testing and development purposes. They may not be active numbers.": "",
    "When you need to include a mask symbol or regex metacharacter as a literal character, use the backslash escape:": "",
    "For regex patterns, set an appropriate max length to prevent excessive output from patterns with * or + quantifiers.": "",
    "Generate valid-looking data for form validation testing, ensuring your forms handle various input formats correctly.": "",
    "Groups allow you to apply quantifiers to multiple characters, while alternation lets you choose between different options.": "",
    "Do not use these numbers for actual communication. They are randomly generated and may belong to real people or businesses.": "",
    "Begin with mask patterns if you're new to data generation. They're easier to understand and perfect for most common formats.": "",
    "Create mock API responses, generate API keys, session tokens, and test identifiers for API endpoint testing and documentation.": "",
    "Generate realistic phone numbers for the United States and Canada with valid area codes mapped to specific states and provinces.": "",
    "Generate consistent example data for documentation, tutorials, and training materials using seeds to ensure examples remain stable.": "",
    "Simple line-by-line format perfect for scripts, command-line tools, or manual review. Includes header comments with generation metadata.": "",
    "Create large volumes of unique test data for load testing and stress testing applications, ensuring performance under realistic conditions.": "",
    "Structured format ideal for APIs, web applications, and automated systems. Includes full metadata about pattern, seed, count, and timestamp.": "",
    "Best for importing into spreadsheets like Excel or Google Sheets, or for bulk imports into databases. Includes index, value, and timestamp columns.": "",
    "Use ranges in quantifiers to generate variable-length data, useful for testing edge cases and ensuring your application handles different lengths properly:": "",
    "Populate development and staging databases with realistic-looking data for demos, performance testing, and development. Generate thousands of records quickly.": "",
    "Leave the seed empty if you want truly random results each time. Use the random seed button (🎲) to generate a new seed value that you can save for later use.": "",
    "You can mix different mask symbols and literal text to create sophisticated patterns. For example, to generate product codes with a prefix, version, and serial:": "",
    "Generate test data for unit tests, integration tests, and UI testing. Create phone numbers, emails, usernames, and IDs that look realistic but are completely fake.": "",
    "The Mask Generator uses simple pattern templates to create structured data. It's perfect for generating formatted strings like phone numbers, IDs, serial numbers, and more.": "",
    "The Regex Generator creates strings that match regular expression patterns. It supports character classes, quantifiers, groups, ranges, and more for complex data generation.": "",
    "Seeds make your data generation reproducible. The same seed always produces the same sequence of results. This is invaluable for testing, debugging, sharing datasets with teammates, and version control.": "",
    "Quantifiers allow you to repeat a mask symbol multiple times without typing it repeatedly. Place the quantifier immediately after the symbol you want to repeat. This makes patterns more concise and easier to read.": "",
    "Masks use simple symbols (like # for digits) and are easier to learn. Regex provides more power with features like alternation, negation, and complex quantifiers. Use masks for simple formats, regex for complex patterns.": "",
    "The generator uses random selection, so duplicates are possible, especially with simple patterns or large quantities. For guaranteed uniqueness, use patterns with high variability or add sequential numbers to your pattern.": "",
    "Lookaheads, lookbehinds, backreferences, and some advanced features aren't supported. Anchors (^ and $) are ignored. The generator focuses on practical pattern matching for data generation rather than full regex validation.": "",
    "This tool generates random data suitable for testing, development, and demos. Never use it for security-sensitive data like real passwords, encryption keys, or anything requiring cryptographic strength. For production IDs, use proper UUID generators.": "",
    "The data generated by this tool is completely random and does not represent real people, places, or entities. Always use fake data for testing and never use real personal information. Generated data should never be considered secure for cryptographic purposes.": "",
    "A seed is a starting value for a random number generator. When you provide the same seed, you'll get the exact same sequence of \"random\" results. This is incredibly useful for testing, debugging, and creating reproducible datasets that multiple team members can generate independently.": "",
    "Pattern-based data generation is a technique for creating structured, formatted data by defining templates or patterns that specify the format and characteristics of the output. This is invaluable for testing, populating databases, creating mock data, and generating realistic sample datasets without manual entry.": "",
    "The Mask Generator uses intuitive symbols to represent different types of characters. Each symbol in your pattern is replaced with a random character from its category. This makes it extremely easy to create formatted data like phone numbers, IDs, license plates, and serial numbers without needing to understand regular expressions.": "",
    "The Regex Generator interprets regular expression patterns and generates strings that match them. This provides far more flexibility and power than masks, allowing complex patterns with alternation, negation, and sophisticated character matching. It's perfect for generating email addresses, URLs, complex IDs, and data that follows intricate rules.": ""
}